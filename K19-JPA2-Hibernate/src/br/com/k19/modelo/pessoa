public class Pessoa{
	//DEfinir valores da coluna id
	@Id //definir como chave primaria
	//A geração IDENTITY é controlada pelo banco de dados e ele fica responsável por
	//gerar o próximo valor do id
	//A estratégia SEQUENCE devolve automaticamente o próximo número
	//exemplo: @GeneratedValue(strategy = GenerationType.SEQUENCE,generator = SEQUENCE_NAME)
	//O modo AUTO 
	//exemplo: @GeneratedValue(strategy = GenerationType.AUTO)
	@GeneratedValue(strategy = GenerationType.IDENTITY) 
	privatte long id;
	
	//definir os valores da coluna nome
	//length = qtd de caracteres da string
	//nullabe = identificar se pode ser nulo
	//unique = identificar se pode ser unico
	@Column(length = 3, nullabe = false, unique = true)
	private String nome;
	
	//Definir os valroes da coluna altura
	//precision = definir precisao
	//scale = qtd de casas decimais
	@Column(precision = 3, scale = 2)
	private BigDeciamal altura;
	
	//Definir valores da coluna avatar
	//Lob = usado para guardar obj grandes (img,musica, etc...)
	@Lob
	private byte avatar;
	
	//Definir valores da coluna nascimento
	//@Temporal = utilizado para tempo
	//TemporalType.DATE: Armazena apenas a data (dia, mês e ano).
	//TemporalType.TIME: Armazena apenas o horário (hora, minuto e segundo).
	//TemporalType.TIMESTAMP (Padrão): Armazena a data e o horário.
	@Temporal(TemporalType.DATE)
	private Calendar nascimento;
	
	//Definir valores da coluna idade
	//@Transient = usado para nao armazenar no banco de dados
	@Transient
	private int idade;
	
	//@Basic ( fetch = FetchType . LAZY )
	//carrega atributo apenas quando utilizado
	//chamada get
	@Basic ( fetch = FetchType . LAZY )
	private String descricao;
	
	//insertable e updatable: indica se aquele campo pode ser alterado ou ter
	//valor inserido;
	@Column(insertable= true,updatable = true)
	private String cpf;
}